{"version":3,"sources":["images/weatherIcons/rain.svg","images/weatherIcons/clouds.svg","images/weatherIcons/snow.svg","components/DescriptionContainerTextComp.js","components/DescriptionContainerImageComp.js","components/DescriptionContainerComp.js","components/WeatherComponent.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DescriptionContainerTextComp","react_default","a","createElement","className","style","color","this","props","text","title","description","React","Component","DescriptionContainerImageComp","display","height","width","src","DescriptionContainerComp","info","content","components_DescriptionContainerTextComp","components_DescriptionContainerImageComp","console","log","myStyle","backgroundColor","preferance","componentSelector","WeatherComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","weather","temperature","city","icon","_this2","fetch","concat","then","data","json","parsedData","setState","main","Math","round","temp","name","weatherSVGIcon","sun","clouds","snow","weatherIconPicker","id","position","fontSize","fontWeight","alt","App","components_DescriptionContainerComp","components_WeatherComponent","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.060f3aab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rain.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.ad789581.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.3def7c9f.svg\";","import React from \"react\"\n\nclass DescriptionContainerTextComp extends React.Component{\n  render(){\n    return(\n      <div className=\"text-center p-4\">\n        <h2 className=\"font-normal text-5xl pb-4\" style={{color: \"#202a34\"}}>{this.props.text.title}</h2>\n        <p className=\"text-center font-hairline text-2xl p-4\">{this.props.text.description}</p>\n      </div>\n    )\n  }\n}\n\nexport default DescriptionContainerTextComp\n","import React from \"react\"\n\nclass DescriptionContainerImageComp extends React.Component{\n  render(){\n    return(\n      <div style={{display: \"flex\", height: \"100%\", width: \"100%\"}}>\n\n        <article className=\"p-4\tw-1/2\">\n          <div className=\"text-center\">\n            <img className=\"h-56 m-auto\" src=\"http://hawkinsdigitalcreative.com/images/banner-dev.svg\" />\n            <p className=\"font-hairline text-2xl p-4\">Hawkins DC specialises in the development of standard and rich media ads. The ads we build work across a variety of platforms and are built to be production friendly.</p>\n          </div>\n        </article>\n\n        <article className=\"p-4 w-1/2\">\n            <div className=\"text-center\">\n              <img className=\"h-56 m-auto\" src=\"http://hawkinsdigitalcreative.com/images/web-dev.svg\" />\n                <p className=\"font-hairline text-2xl p-4\"> We build fully responsive websites, landing pages, and animated infographics. We are constantly keeping up with the latest trends to ensure we develop the best possible work.</p>\n            </div>\n        </article>\n\n      </div>\n    )\n  }\n}\n\nexport default DescriptionContainerImageComp\n","import React from \"react\"\nimport DescriptionContainerTextComp from \"./DescriptionContainerTextComp\"\nimport DescriptionContainerImageComp from \"./DescriptionContainerImageComp\"\n\n\nclass DescriptionContainerComp extends React.Component{\ncomponentSelector(props){\n\n  if(this.props.info.content === \"text\"){\n    return (\n    <DescriptionContainerTextComp\n    text={{\n      title: this.props.info.title,\n      description: this.props.info.description,\n    }}\n    />\n    )\n  }\n  else{\n    return(\n     <DescriptionContainerImageComp />\n    )\n  }\n\n}\n  render(props){\n    console.log(this.props)\n    let myStyle = {\n      backgroundColor: this.props.info.preferance ? \"#fff\" : \"#edf2f7\"\n    }\n    return(\n      <section className=\"w-100 p-6 bg-gray-100\" style={myStyle}>\n\n        {this.componentSelector()}\n\n      </section>\n    )\n  }\n}\n\nexport default DescriptionContainerComp\n","import React from \"react\"\nimport rain from \"../images/weatherIcons/rain.svg\"\nimport sun from \"../images/weatherIcons/rain.svg\"\nimport clouds from \"../images/weatherIcons/clouds.svg\"\nimport snow from \"../images/weatherIcons/snow.svg\"\n\nconst API = \"547faba16ca4d2d483f0c799b4fd6c77\"\nclass WeatherComponent extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      weather:0,\n      temperature:0,\n      city: 0,\n      icon: '10n'\n    }\n  }\n\n\n  componentDidMount(){\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API}`)\n    .then(data => data.json())\n    .then((parsedData) => {\n      this.setState({\n        weather:parsedData.weather[0].main,\n        temperature: Math.round(parsedData.main.temp - 273.15),\n        city: parsedData.name,\n        icon: parsedData.weather[0].icon\n      })\n    })\n  }\n\n  weatherIconPicker(){\n\n    let weatherSVGIcon\n    console.log(this.state.weather)\n    switch(this.state.weather) {\n      case \"Rain\" || \"Drizzle\":\n      weatherSVGIcon = rain\n\n      break;\n\n      case \"Clear\":\n      weatherSVGIcon = sun\n      break;\n\n      case \"Clouds\":\n      weatherSVGIcon = clouds\n      break;\n\n      case \"Snow\":\n      weatherSVGIcon = snow\n      break;\n      default:\n      weatherSVGIcon=null\n      // code block\n    }\n    // console.log(weatherSVGIcon)\n    return weatherSVGIcon\n\n  }\n\n\n  render(){\n    let icon = this.weatherIconPicker();\n\n    let weatherInfoStyle = {\n      width: \"100%\",\n      height: \"100%\",\n      position: \"relative\",\n    };\n\n    let sectionStyle={\n      backgroundColor: \"#451c84\"\n    }\n\n    let weatherIconImage = `http://openweathermap.org/img/wn/${this.state.icon}@2x.png`\n    return(\n      <section className=\"w-100 p-6 bg-gray-100 h-full\" style={sectionStyle}>\n        <div id=\"weatherContainer\" className=\"text-center p-4\" style={weatherInfoStyle}>\n          <h4 className=\"font-normal text-3xl p-4 text-white\">{this.state.weather}</h4>\n          <h3 className=\"font-normal p-4 text-yellow-600\" style={{fontSize: \"6rem\", fontWeight: 600}}>{this.state.temperature} â„ƒ</h3>\n          <h2 className=\"font-normal text-4xl text-white\">{this.state.city}</h2>\n          <img className=\"m-auto\" src={icon} style={{width: \"15%\"}} alt=\"WeatherIcon\" />\n        </div>\n      </section>\n    )\n  }\n\n}\n\nexport default WeatherComponent\n","import React from \"react\"\nimport DescriptionContainerComp from \"./DescriptionContainerComp\"\nimport WeatherComponent from \"./WeatherComponent\"\n\nclass App extends React.Component{\n  render(){\n    return (\n      <div>\n\n        <DescriptionContainerComp\n          info={{\n            preferance: true,\n            content: \"image\",\n            title: \"How we do it\",\n            description: \"Each creative campaign is unique, and therefore, the creative solutions behind it should also be specific to the creative idea, to deliver the best possible results. We intentionally go above and beyond to provide digital ad and websites/landing page experiences. This is because we understand the possibilities of what can be done through digital development work and are therefore in the position to continuously challenge the initial idea to make it even greater.\"\n          }}\n        />\n\n        <DescriptionContainerComp\n          info={{\n            preferance: false,\n            content: \"text\",\n            title: \"Why we are here\",\n            description: \"Many companies do not have the necessary skill set to produce high-quality banner ads for desktop and mobile. This is where Hawkins DC can deliver you a service, which may be really beneficial to any company looking to improve its digital game. Hawkins DC is a company with the sole focus of producing high-quality web development services for its clients. Not only do we focus on quality but also on the efficiency of the work we produce, so that production can be done far more effectively than it is being done at present by others in the digital field.\"\n          }}\n        />\n\n        <DescriptionContainerComp\n          info={{\n            preferance: true,\n            content: \"text\",\n            title: \"How we do it\",\n            description: \"Each creative campaign is unique, and therefore, the creative solutions behind it should also be specific to the creative idea, to deliver the best possible results. We intentionally go above and beyond to provide digital ad and websites/landing page experiences. This is because we understand the possibilities of what can be done through digital development work and are therefore in the position to continuously challenge the initial idea to make it even greater.\"\n          }}\n        />\n\n        <DescriptionContainerComp\n          info={{\n            preferance: false,\n            content: \"text\",\n            title: \"Showcase\",\n            description: \"This section is coming soon!\"\n          }}\n        />\n\n        <WeatherComponent />\n\n        <DescriptionContainerComp\n          info={{\n            preferance: true,\n            content: \"text\",\n            title: \"Weather App\",\n            description: \"The App above is pulling from the OPENWEATHERMAP API\"\n          }}\n        />\n\n\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\nimport './styles/tailwind.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}